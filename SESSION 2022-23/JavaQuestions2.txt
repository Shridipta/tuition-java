PROGRAM 147 : TO DISPLAY 1ST 5 N DIGITED ARMSTRONG NUMBER
PROGRAM 148 : TO DISPLAY THE FOLLOWING PATTERN:	11
						358
						57921
PROGRAM 149 : TO FIND nCr WHERE nCr = N!/(R!(N-R)!) USING FUNC
PROGRAM 150 : TO PRINT EACH TERM AND SUM OF THE FOLLOWING SERIES:
		X - X^3/3! + X^5/5! - .... X^N/N!

PROGRAM 151 : TO CHECK WHETHER A NUMBER IS KRISHNAMURTHY NUMBER OR NOT
PROGRAM 152 : TO FIND THE SUM OF THE FOLLOWING SERIES:
		1! + 2! + 3! + .... + N!

PROGRAM 153 : USING A FUNCTION boolean isprime(int) WAP TO PRINT ALL THE PRIME NUMBERS BETWEEN X TO Y
PROGRAM 154 : USING A FUNCTION int max (int, int) WAP TO FIND THE HIGHEST OF FOUR INTEGERS
PROGRAM 155 : USING A FUNCTION int max (int, int) WAP TO FIND THE HIGHEST NUMBER FROM N NUMBER OF NUMBERS TAKEN FROM KEYBOARD
PROGRAM 156 : TO PRINT 1ST N PRIME NUMBERS USING THE FUNCTION boolean isprime(int)
PROGRAM 157 : TO DISPLAY ALL THE 3 DIGIT WHOSE REVERSE IS ALSO PRIME (TWISTED PRIME) USING FUNCTION
PROGRAM 158 : TO DISPLAY 1ST 50 PALINDROME NUMBERS WHOSE SUM OF DIGITS IS A PRIME NUMBER FROM A NUMBER "START"
PROGRAM 159 : TO INPUT A NUMBER AND CHECK WHETHER THE NUMBER IS ADAM NUMBER OR NOT
		  ADAM NUMBER- ADAM NUMBER IS AN EVEN DIGITED NUMBER AND SUM OF THE PAIRS IS A PERFECT SQUARE
		 EG. 2326 ---> 23+26 = 49 ----> 49 IS A PERFECT SQ

PROGRAM 160 : TO INPUT A NUMBER AND CHECK WHETHER THE NUMBER IS MAGIC NUMBER OR NOT
		  MAGIC NUMBER- A NUMBER WHOSE SUM OF THE DIGITS ULTIMATELY CONVERGE TO 1
		  EG. 784 --> 7+8+4=19 --> 1+9=10 --> 1+0=1

PROGRAM 161 : TO INPUT A NUMBER AND CHECK WHETHER THE NUMBER IS HAPPY NUMBER OR NOT
              HAPPY NUMBER- A NUMBER WHOSE SUM OF THE DIGITS SQUARED ULTIMATELY CONVERGE TO 1
		  EG. 68-->6^2+8^2=100 --> 1^2+0^2+0^2=1

PROGRAM 162 : WRITE A METHOD TO RETURN THE NTH FIBONACCI TERM AND PRINT N FIBONACCI TERMS IN REVERSE ORDER
PROGRAM 163 : USING THE FUNCTION INT nthfib(int n) WAP TO DISPLAY N NON FIBONACCI TERMS
		  EG. N=5 ---> 4, 6, 7, 10

PROGRAM 164 : USING FUNCTION int hcf(int, int), TO CHECK WHETHER TWO GIVEN NUMBER IS COPRIME OR NOT
PROGRAM 165 : USING FUNCTION int hcf(int, int), TO DISPLAY THE HCF OF N NUMBER OF NUMBERS TAKEN FROM KEYBOARD
PROGRAM 166 : USING FUNCTION int sumOfDivisor(int), TO CHECK A NUMBER IS PERFECT NUMBER OR NOT
PROGRAM 167 : USING FUNCTION int sumOfDivisor(int), TO CHECK A NUMBER IS PRIME OR NOT
PROGRAM 168 : USING FUNCTION int sumOfDivisor(int), CHECK WHETHER A NUMBER IS PERFECT, ABUNDANT OR DEFICIENT
PROGRAM 169 : WRITE A FUNCTION int sumOfDigits(int)	
PROGRAM 170 : WRITE A FUNCTION int reverse(int)
PROGRAM 171 : USING THE FUNCTION int reverse(int) TO CHECK A NUMBER IS PALINDROME OR NOT
PROGRAM 172 : USING THE FUNCTION int sumOfDigits(int) TO CHECK A NUMBER IS MAGIC OR NOT
PROGRAM 173 : USING THE FUNCTION int reverse(int) TO DISPLAY ALL 4 DIGITS PALINDROME NUMBERS
PROGRAM 174 : WRITE A FUNCTION int countDigits(int)
PROGRAM 175 : USING THE FUNCTION int countDigits(int) TO CHECK WHETHER THE GIVEN NUMBER IS AUTOMORPHIC OR NOT (WHILE)
PROGRAM 176 : USING THE FUNCTION int countDigits(int) TO CHECK WHETHER THE GIVEN NUMBER IS KAPREKAR OR NOT (WHILE)
PROGRAM 177 : USING THE FUNCTION int countDigits(int) TO CHECK WHETHER THE GIVEN NUMBER IS ARMSTRONG OR NOT (WHILE)
PROGRAM 178 : USING THE FUNCTION int countDigits(int) TO CHECK WHETHER THE GIVEN NUMBER IS DISARIUM OR NOT (WHILE)
PROGRAM 179 : TO FIND THE ROOTS OF QUADRATIC EQUATION AND THE NATURE OF ROOTS WITH THE FOLLOWING METHODS:-
		  i) void findroots(int, int, int)
		  ii) int discriminant(int, int, int)
PROGRAM 180 : TO ACCEPT A NUMBER AND RETURN THE SUM OF THE DIGIT^DIGIT USING THE FUNCTIONS:-
		  int toThePower(x, n) WITHOUT USING Math.pow()
PROGRAM 181 : USING THE CONCEPT OF FUNCTION OVERLOADING, TO DEFINE THE FOLLOWING FUNCTION AND INVOKE THEM IN THE APPROPRIATE MANNER:
		  i) x/2 - x^2/3 + x^3/4 ... TO FIND THE SUM OF THE SERIES UPTO 1ST N TERMS
		  ii) 1, 2, 5, 12 ... TO DISPLAY PELL SERIES UPTO FIRST N TERMS

PROGRAM 182 : TO PRINT THE FOLLOWING SERIES USING APPROPRIATE FUNCTIONS:
		  x - x^2/2! + x^3/3! ... TO FIND THE SUM OF THE SERIES UPTO 1ST N TERMS
PROGRAM 183 : TO CHECK WHETHER A NUMBER IS KAPREKAR NUMBER OR NOT USING THE FOLLOWING FUNCTIONS:
		  i) void checKaprekar (int)
		  ii) int countDigit (int)
PROGRAM 184 : TO DESIGN THE FOLLOWING FUNCTION:
		  void check (int num)
		 {
			//TO CHECK A NUMBER IS ASCENDING, DESCENDING OR BOUNCY
			//123 --> ASCENDING     321 --> DESCENDING    132 --> BOUNCY
		 }
PROGRAM 185 : TO INPUT N NUMBER OF INTEGERS IN AN ARRAY AND REVERSE THE CONTENT OF THE ARRAY WHITHOUT USING ANY OTHER ARRAY
		  N=5 {2, 3, 4, 7, 9}  => {9, 7, 4, 3, 2}
PROGRAM 186 : TO FIND THE HIGHEST AND LOWEST ELEMENT IN AN ARRAY
PROGRAM 187 : TO CONVERT A DECIMAL NUMBER TO A BINAY USING ARRAY
PROGRAM 188 : TO FIND THE SECOND HIGHEST ELEMENT IN AN ARRAY
PROGRAM 189 : TO ACCEPT N NUMBER OF ELEMENTS IN AN ARRAY AND STORE ALL THE PRIME NUMBERS IN ONE ARRAY AND ALL THE COMPOSITE NUMBERS IN ANOTHER ARRAY. DISPLAY BOTH THE ARRAYS 
PROGRAM 190 : TO CONVERT A DECIMAL NUMBER TO ANY OTHER NUMBER WITH A BASE OF B (B<=26)
PROGRAM 191 : TO DISPLAY 1ST N TERMS OF FIBONACCI SERIES IN REVERSE ORDER USING ARRAY
PROGRAM 192 : TO FIND THE INTERSECTION OF TWO GIVEN ARRAYS
PROGRAM 193 : TO FIND THE UNION OF TWO GIVEN ARRAYS
PROGRAM 194 : TO DISPLAY THE SUBARRAY BETWEEN THE HIGHEST AND LOWEST ELEMENTS POSITIONS
PROGRAM 195 : TO IMPLEMENT LINEAR SEARCH
PROGRAM 196 : TO IMPLEMENT BINARY SEARCH
PROGRAM 197 : TO IMPLEMENT BUBBLE SORT
PROGRAM 198 : TO REARRANGE THE ELEMENTS IN AN ARRAY SO THAT ALL THE PRIME NUMBERS ARE IN THE LEFT AND COMPOSITE NUMBERS IN THE RIGHT SIDE WITHOUT CHANGING THE SEQUENCE OF THE NUMBERS
		  EG. {5, 15, 10, 7, 13, 20}   =>  {5, 7, 13, 15, 10, 20}
PROGRAM 199 : TO FIND THE FREQUENCY OF THE ELEMENTS PRESENT IN THE ARRAY
		  EG. {5, 9, 5, 2, 6, 9, 4, 3, 2, 2}
			FREQUENCY OF 5 - 2
			FREQUENCY OF 9 - 2
			FREQUENCY OF 6 - 1
			FREQUENCY OF 4 - 1
			FREQUENCY OF 3 - 1
			FREQUENCY OF 2 - 3

PROGRAM 200 : TO REMOVE THE DUPLICATE ELEMENTS FROM AN ARRAY
		  EG. {5, 4, 9, 5, 6, 3, 2, 3}   => {5, 9, 4, 6, 3, 2}
PROGRAM 201 : TO IMPLEMENT SELECTION SORT
PROGRAM 202 : TO ACCEPT THE MARKS OF N NUMBER OF STUDENTS IN AN ARRAY IN THE RANGE. 0 TO 100 AND FIND THE FREQUENCY DISTRIBUTION OF THE MARKS
PROGRAM 203 : CHECK FROM THE IMAGES
PROGRAM 204 : CHECK FROM THE IMAGES
PROGRAM 205 : CHECK FROM THE IMAGES
PROGRAM 206 : CHECK FROM THE IMAGES
PROGRAM 207 : CHECK FROM THE IMAGES
PROGRAM 208 : CHECK FROM THE IMAGES

PROGRAM 209 : CLASS: IncomeTax
		  DATA MEMBERS:
			double income, tax
		  CONSTRUCTOR:	
			IncomeTax(double)
		  MEMBER METHODS:
			void calculate()
				INCOME 		TAX
			Upto 2-5 lacs	0
			>2.5 - 5lacs	10% in excess of 2.5lacs
			>5-10 lacs        3000+20% in excess of 5 lacs
			>10 lacs		5000+30% in excess of 10 lacs

PROGRAM 211 : CLASS: Salary
		  DATA MEMBERS:
			double basic, gross, net
		  MEMBER METHODS:
			void accept()
			void calculate()
			void display()
			gross = basic +da+hra where da = 40% of basic and hra = 30% of basic
			net = pross-pf-tax where pf = 8.33% of gross and tax = 10% of gross

PROGRAM 212 : CLASS: LcmHcf
		  DATA MEMBERS:
			int a, b, l, h
		  CONSTRUCTOR:
			LcfHcf(int, int)
		  MEMBER METHODS:
			int lcm()
			int hcf()
			void display()

PROGRAM 213 : CLASS: Point
		  DATA MEMBERS: 
			int x, y
		  CONSTRUCTOR: 
			Point(int, int)
		  MEMBER METHODS:
			Point midPoint(Point p)
			void findDistance(Point p1, Point p2)
			void main()
			void display()
	
PROGRAM 214 : CLASS: Angle
		  DATA MEMBERS: 
			int deg, min
		  CONSTRUCTOR: 
			Angle(int, int)
		  MEMBER METHODS:
		  	Angle sumAngle(Angle, Angle)
		  	void diffAngle(Angle) // difference between current object and parameter object
		  	void display()

PROGRAM 215 : CLASS: Line
		  DATA MEMBERS: 
			int x1, y1, x2, y2
			double length
		  CONSTRUCTOR: 
			Line(int a, int b, int c, int d)
		  MEMBER METHODS:
			void midpoint()
		  	void display()
		  	void distance()
			Line compare(Line l)
			void main()

PROGRAM 216 : CLASS: Fraction
		  DATA MEMBERS: 
			int num, den
		  CONSTRUCTOR: 
			Fraction(int, int)
		  MEMBER METHODS:
			int lcm(int, int)
			int hcf(int, int)
			void reduce()
			Fraction addTo(Fraction)
			void display()
			void main()

PROGRAM 217 : TO ACCEPT A STRING AND DISPLAY THE STRING IN THE FOLLOWING FORMAT: "ABCD"
	      i)  A        ii) ABCD	iii) A		iv) D      v) n = 4
		  AB	       ABC	     BA		    CD			  $
		  ABC	       AB	     CBA	    BCD			  #$
		  ABCD	       A	     DCBA	    ABCD		  #$#
														  $#$#
	      
PROGRAM 218 : TO ACCEPT A SENTENCE AND DISPLAY THE SENTENCE IN THE FOLLOWING FORMAT: "This is Java"
	      This
	      This is 
	      This is Java_
		  
PROGRAM 219 : TO ACCEPT A SENTENCE AND EXTRACT THE WORDS
PROGRAM 220 : TO CHECK A STRING IS PALINDROME OR NOT (USING 3 METHODS)
PROGRAM 221 : TO ACCEPT A STRING AND CONVERT IT TO TOGGLE CASE WHILE ALL OTHER CHARACTERS WILL REMAIN UNCHANGED
PROGRAM 222 : TO ACCEPT A STRING AND DISPLAY THE FREQUENCY OF EACH VOWEL
PROGRAM 223 : TO ACCEPT A SENTENCE AND MAKE A NEW SENTENCE BY REVERSING THE ORDER OF WORDS. EG. "Java is fun" => "fun is Java"
PROGRAM 224 : TO SEARCH A WORD IN A TEXT AND REPLACE IT BY ANOTHER WORD. EG. "Java is fun" "Python" => "Python is fun"
PROGRAM 225 : TO ACCEPT A STRING AND DISPLAY ALL THE PALINDROME WORDS. EG. "MOM and DAD will come at NOON" => "MOM", "DAD", "NOON"
PROGRAM 226 : TO ACCEPT A STRING AND DISPLAY THE LONGEST AND SHORTEST WORD
PROGRAM 227 : TO DISPLAY EACH WORD AND NUMBER OF VOWEL IN EACH WORD
PROGRAM 228 : TO REVERSE EACH WORD OF A SENTENCE AND DISPLAY THE NEW SENTENCE
PROGRAM 229 : TO DISPLAY EACH WORD OF A SENTENCE WHICH STARTS AND ENDS WITH SAME LETTER INGORING THE CASE
PROGRAM 230 : TO DISPLAY THE WORDS IN A SENTENCE WHICH CONTAINS ATLEAST ONE PAIR OF CONSECUTIVE LETTERS
	      EG. INPUT: HE WAS BORN IN AUGUST
		  OUTPUT: AUGUST
		  
PROGRAM 231 : TO ACCEPT A SENTENCE AND ARRANGE THE WORDS IN ALPHABETICAL ORDER
	      EG. INPUT: Java is this
		  OUTPUT: is Java this
		  
PROGRAM 232 : TO ENCRYPT A STRING IN A CIRCULAR WAY WHERE YOU MAY CONSIDER ONLY LOWER CASE LETTERS ARE PRESENT
	      EG. INPUT: "abxyz"      Encrypt by position: 2
		  OUTPUT: "cdzab"
		  
PROGRAM 233 : TO ACCEPT A NUMBER AS BIG AS POSSIBLE AND DISPLAY THE SUM OF THE DIGITS
PROGRAM 234 : TO ARRANGE THE LETTER OF A STRING (IN UPPERCASE) WITHOUT USING ANY SORTING ALGORITHM
PROGRAM 235 : TO SHIFT ALL THE VOWELS IN THE BEGINNING AND ALL THE CONSONANT AT THE END WITHOUT CHANGING THE SEQUENCE (UPPERCASE STRING)
			  EG. JAVA => AAJV
PROGRAM 236 : TO DISPLAY EACH WORD AND NUMBER OF VOWELS IN EACH WORD USING A SINGLE LOOP
PROGRAM 237 : TO REMOVE ALL THE EXTRA WHITE SPACE IN BETWEEN THE WORDS OF A SENTENCE
			  EG. "This  is   Java" => "This is Java"
PROGRAM 238 : TO ACCEPT A STRING AND CONVERT IT TO LOWERCASE AND REPLACE EVERY VOWEL BY THE NEXT VOWEL IN A CYCLIC WAY AND DISPLAY THE NEW STRING
			  EG. "Computer" => "cumpatir"
PROGRAM 239 : TO CHECK WHETHER A SENTENCE IS VALID OR NOT. IF IT IS INVALID THEN MAKE IT VALID BY REMOVING THE NESTED ()
			  IF A SENTENCE CONTAINS A NESTED () THEN IT IS INVALID
			  EG. This (is (fixed) goal ) for everyone
			      => Invalid
				  	 This (is (fixed) goal ) for everyone
PROGRAM 240 : TO ACCEPT A NAME AND DISPLAY THE NAME IN THE FOLLOWING FORMAT.
			  EG. "Alok Kumar Mukherjee" => "Mukherjee A. K"
PROGRAM 241 : TO CONVERT A STRING TO PIG LATIN FORM AS FOLLOWS
			  EG. KING => INGKAY   ,    TROUBLE => OUBLETRAY
			  IF NO VOWEL IS PRESENT THEN THE ORIGINAL STRING WILL BE PRINTED ALONG WITH ADDITION OF "ay"
PROGRAM 242 : CLASS: Employee
	      DATA MEMBERS: 
	          String name 
		  int empcode
		  double salary, gross, tax

	      MEMBER METHODS:
		  Employee()
		  void accept()
		  void calculate() - TO CALCULATE THE GROSS PAY = SALARY + 80% OF DA + 30% OF HRA
		  void display() - TO FIND THE TAX ON GROSS PAY AS FOLLOWS:
		  	GROSS PAY		  TAX
		  	<= 3 lacs		   0
		  	> 3 - 6		   10% IN EXCESS OF 3 LACS
		        > 6		   15% IN EXCESS OF 3 LACS
		ACCEPT N NUMBER OF EMPLOYEE'S DATA AND FIND THE GROSS PAY, TAX AND DISPLAY THEM
		 
PROGRAM 243 : TO ACCEPT A SENTENCE AND DISPLAY THE FIRST LETTER OF EACH WORD IN UPPER AS FOLLOWS
		INPUT : "This is a cat"
		OUTPUT : T.I.A.C

PROGRAM 244 : TO INPUT A STRING AND CONVERT IT INTO UPPERCASE AND PRINT THE PAIR OF VOWELS AND NUMBER OF PAIR OF VOWELS IN THE STRING
		INPUT : "BEAUTIFUL BEAUTIES"
		OUTPUT => PAIR OF VOWELS: EA, AU, EA, AU, IE
			  NUMBER OF PAIR OF VOWELS: 5

PROGRAM 245 : TO MERGE TWO STRINGS AND STORE IT TO A THIRD STRING AS FOLLOWS:-
		EG. str1 = "ABCD" str2 = "PQRSTU"
PROGRAM 246 : TO SORT ELEMENTS AT ODD INDEX IN AN ARRAY USING BUBBLE SORT
	      EG. 3, 6, 2, 9, 7, 5, 4 => 3, 5, 2, 6, 7, 9, 4